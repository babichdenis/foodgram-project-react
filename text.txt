python3 -m venv venv
source venv/bin/activate
python3 -m pip install --upgrade pip
django-admin startproject backend
pip install Django==3.2.16
pip install -r requirements.txt
python3 manage.py runserver
python manage.py migrate 
python manage.py startapp users


login: yc-user
passphrase: JlOv3bJ-5z
ip: 158.160.22.131
ssh -i /Users/Denis/.ssh/ssh_Den/yc-babichdenis yc-user@158.160.22.131

sudo nginx -t
sudo systemctl reload nginx 

docker run --name db \
       --env-file .env \
       -v pg_data:/var/lib/postgresql/data \
       postgres:13.10

Увидеть список таких безымянных образов (они называются dangling, англ. «болтающиеся») можно так:
docker image ls -f "dangling=true" -q 
Почистить компьютер от таких образов можно такой командой:
docker image rm $(docker image ls -f "dangling=true" -q) 

удалить контейнеры
docker rm -f $(docker ps -a -q)
образы
docker rmi -f $(docker images -a -q)
тома
docker volume rm $ (docker volume Is -q)

sudo service docker stop
sudo service docker start

docker-compose down
docker network prune
sudo service docker restart // If this doesn't work manually restart docker
docker-compose up

$ docker run -it -p 8080:80 $(docker build -q .)
In our case, port 8080 was already allocated by other docker image container. We had to find the name of the docker container by running the following command:

$ docker container ls
This showed us the container that was holding 8080 port. In our case, the docker container was fairly old and was not in use. We removed it using the following command:

$ docker rm -f <CONTAINER_ID>


  GNU nano 6.2    /etc/nginx/sites-enabled/default              
server {
    server_name kittygramden.ddns.net;
    server_tokens off;
    location / {
        proxy_set_header Host $http_host;
        proxy_pass http://127.0.0.1:9000;
        client_max_body_size 20M;
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/kittygramden.ddns.net>
    ssl_certificate_key /etc/letsencrypt/live/kittygramden.ddns>
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed >
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by>


}

server {
    server_name babichden.ddns.net;
    server_tokens off;
    location / {
        proxy_set_header Host $http_host;
        proxy_pass http://127.0.0.1:8000;
        client_max_body_size 20M;
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/kittygramden.ddns.net>
    ssl_certificate_key /etc/letsencrypt/live/kittygramden.ddns>
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed >
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by>


}



server {
    if ($host = babichden.ddns.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name babichden.ddns.net;
    listen 80;
    return 404; # managed by Certbot


}

server {
    if ($host = kittygramden.ddns.net) {
        return 301 https://$host$request_uri;

server {
    server_name babichden.ddns.net;
    server_tokens off;
    location / {
        proxy_set_header Host $http_host;
        proxy_pass http://127.0.0.1:8000;
        client_max_body_size 20M;
    }


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/kittygramden.ddns.net>
    ssl_certificate_key /etc/letsencrypt/live/kittygramden.ddns>
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed >
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by>


}



server {
    if ($host = babichden.ddns.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name babichden.ddns.net;
    listen 80;
    return 404; # managed by Certbot


}

server {
    if ($host = kittygramden.ddns.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    server_name kittygramden.ddns.net;
    listen 80;
    return 404; # managed by Certbot


}

server {
    server_name 158.160.22.131 foodgramden.ddns.net;

    location / {
        proxy_set_header Host $http_host;
        proxy_pass http://127.0.0.1:8090;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/kittygramden.ddns.net>
    ssl_certificate_key /etc/letsencrypt/live/kittygramden.ddns>
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed >
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by>

}



server {
    if ($host = foodgramden.ddns.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name foodgramden.ddns.net;
    return 404; # managed by Certbot


}